/*
 * Orkes Conductor API Server
 * Orkes Conductor API Server
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.orkes.conductor.client.http.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * ConductorUser
 */


public class ConductorUser {
  @SerializedName("applicationUser")
  private Boolean applicationUser = null;

  @SerializedName("groups")
  private List<Group> groups = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("roles")
  private List<Role> roles = null;

  @SerializedName("uuid")
  private String uuid = null;

  public ConductorUser applicationUser(Boolean applicationUser) {
    this.applicationUser = applicationUser;
    return this;
  }

   /**
   * Get applicationUser
   * @return applicationUser
  **/
  @Schema(description = "")
  public Boolean isApplicationUser() {
    return applicationUser;
  }

  public void setApplicationUser(Boolean applicationUser) {
    this.applicationUser = applicationUser;
  }

  public ConductorUser groups(List<Group> groups) {
    this.groups = groups;
    return this;
  }

  public ConductorUser addGroupsItem(Group groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<Group>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @Schema(description = "")
  public List<Group> getGroups() {
    return groups;
  }

  public void setGroups(List<Group> groups) {
    this.groups = groups;
  }

  public ConductorUser id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ConductorUser name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConductorUser roles(List<Role> roles) {
    this.roles = roles;
    return this;
  }

  public ConductorUser addRolesItem(Role rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<Role>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @Schema(description = "")
  public List<Role> getRoles() {
    return roles;
  }

  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public ConductorUser uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConductorUser conductorUser = (ConductorUser) o;
    return Objects.equals(this.applicationUser, conductorUser.applicationUser) &&
        Objects.equals(this.groups, conductorUser.groups) &&
        Objects.equals(this.id, conductorUser.id) &&
        Objects.equals(this.name, conductorUser.name) &&
        Objects.equals(this.roles, conductorUser.roles) &&
        Objects.equals(this.uuid, conductorUser.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationUser, groups, id, name, roles, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConductorUser {\n");
    
    sb.append("    applicationUser: ").append(toIndentedString(applicationUser)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
